buildscript {
    ext {
        restdocsApiSpecVersion = '0.17.1' // restdocsApiSpecVersion 전역 변수
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.8'
    id 'io.spring.dependency-management' version '1.1.3'
    id 'org.asciidoctor.jvm.convert' version '3.3.1'
    id 'com.epages.restdocs-api-spec' version "${restdocsApiSpecVersion}"
    id 'org.hidetake.swagger.generator' version '2.18.2'
}

group = 'COMMON'
version = '1.0'

java {
    sourceCompatibility = '17'
}

configurations {
    asciidoctorExt

    compileOnly {
        extendsFrom annotationProcessor
    }
}

/* profile change config */
ext.profile = (!project.hasProperty('profile')) ? 'default' : profile
println "current profile : ${profile}"
sourceSets {
    main {
        resources {
            srcDirs("src/main/resources", "deploy/${profile}/src/main/resources")
            exclude "src/test/**"
        }
    }
}

repositories {
    maven {
        allowInsecureProtocol true
        credentials {
            username 'maven'
            password 'maven123'
        }
        url "http://210.92.129.251:8081/repository/maven-public/"
        authentication {
            basic(BasicAuthentication)
        }
    }
}

dependencies {
    /* spring boot */
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.2'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-logging'
    implementation 'org.springframework.boot:spring-boot-test'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter-test:3.0.2'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    compileOnly 'javax.servlet:javax.servlet-api:3.1.0'
    runtimeOnly 'org.aspectj:aspectjrt:1.7.3'

    /* lombok */
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

    /* oracle jdbc */
    runtimeOnly 'com.oracle.database.jdbc:ojdbc8'
    implementation 'com.oracle.ojdbc:orai18n:19.3.0.0'

    /* Sql server (mssql) */
    implementation 'com.microsoft.sqlserver:mssql-jdbc:11.2.0.jre11'

    /* SQL logger Log4jdbc */
    implementation 'org.bgee.log4jdbc-log4j2:log4jdbc-log4j2-jdbc4.1:1.16'

    /* json */
    implementation 'com.jayway.jsonpath:json-path:2.4.0'
    implementation 'com.google.code.gson:gson:2.8.5'
    implementation 'com.googlecode.json-simple:json-simple:1.1'

    /* RestDoc*/
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'

    /* Swagger ++ */
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.0.2'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'com.epages:restdocs-api-spec-mockmvc:' + restdocsApiSpecVersion
    testImplementation 'com.squareup.okhttp3:mockwebserver'

    /* Quartz */
    implementation 'org.quartz-scheduler:quartz:2.3.2'
    implementation 'org.springframework.boot:spring-boot-starter-quartz';

    /* AOP Aspect */
    implementation 'org.aspectj:aspectjweaver:1.8.9'

    implementation 'org.apache.commons:commons-lang3:3.4'
    implementation 'org.apache.commons:commons-configuration2:2.0'
    implementation 'org.apache.commons:commons-collections4:4.1'
    implementation 'commons-collections:commons-collections:3.2.2'
    implementation 'org.apache.commons:commons-compress:1.3'

    implementation 'org.apache.httpcomponents.client5:httpclient5:5.2.1'

    implementation 'org.apache.poi:poi:3.9'
    implementation 'org.apache.poi:poi-scratchpad:3.13'
    implementation 'org.apache.poi:poi-ooxml:3.9'

    implementation 'org.codehaus.jackson:jackson-mapper-asl:1.9.13'
    implementation 'org.codehaus.jackson:jackson-core-asl:1.9.13'

    implementation 'commons-io:commons-io:2.11.0'

    implementation 'com.ibm.icu:icu4j:51.1'
    implementation 'commons-codec:commons-codec:1.9'

    /* 3rd party */
    implementation 'com.bwc.3rd:eai-wrapper:2.2'
    implementation 'com.bwc.3rd:jms:2.0'
    implementation 'com.bwc.3rd:tibjms:1.0'
    implementation 'com.bwc.bluepay:zomm:1.0'

    implementation 'org.egovframe.rte:org.egovframe.rte.ptl.mvc:4.0.0'
    implementation 'log4j:log4j:1.2.12'
    implementation 'commons-dbcp:commons-dbcp:1.4'

    implementation 'org.hibernate:hibernate-core:5.0.8.Final'
    implementation 'org.hibernate:hibernate-validator:6.2.3.Final'
    implementation 'commons-net:commons-net:3.3'

    implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.5'

}

/* UTF-8 인코딩 설정 */
compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile).tap {
    configureEach {
        options.encoding = 'UTF-8'
    }
}

/* properties duplicate prevent */
tasks {
    processResources {
        duplicatesStrategy = org.gradle.api.file.DuplicatesStrategy.INCLUDE
    }
}


tasks.withType(GenerateSwaggerUI) {
    dependsOn 'openapi3'

    // 기존 파일 삭제
    delete file('src/main/resources/static/docs')
    // 생성된 파일 로컬 디렉토리로 복사 ( local 확인용. 어차피 서버 환경에선 build 파일 위치에서 보기 때문)
    copy {
        from 'build/resources/main/static/docs'
        into 'src/main/resources/static/docs/'
    }
}

test {
    useJUnitPlatform()
    if (project.hasProperty('profile')) {
        systemProperty 'spring.profiles.active', project.property('profile')
    } else {
        println "####### None profile : ${profile}"
    }
//    outputs.dir snippetsDir // swagger ++
}

openapi3 {
    server = "http://localhost:8080" // 서버URL
    title = "Message Gate API DOCS"
    description = "메시지 발송 API Test Page"
    version = "0.0.1"
    outputFileNamePrefix = 'messagegate-api-3.0.1'
    format = 'json'

    // static/docs/
    // open-api-3.0.1.json 생성 -> jar 파일만 배포하기 때문에 build에만 생성
    outputDirectory = 'build/resources/main/static/docs'
}

asciidoctor {
    configurations 'asciidoctorExt'
    baseDirFollowsSourceFile()
    inputs.dir file("build/generated-snippets")
    dependsOn test
}

// openAPI 작성 자동화를 위해 패키징 전에 openapi3 테스크에 의존
bootJar {
    archiveBaseName = 'msggate'
//    dependsOn(':openapi3')
}

build {
    dependsOn(':openapi3')
}